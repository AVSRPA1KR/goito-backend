name: Frontend-Repo-Build

on:
   push:
    branches:
    - 'develop**'
    paths-ignore:
    - '.github/**'

   workflow_dispatch:
    inputs:
      checkout_ref:
        description: 'the branch, tag or SHA to checkout. When checking out the repository'
        required: false

jobs:
  
  build:
    environment: build-dev
    runs-on: ubuntu-latest
    permissions:
        id-token: write
        contents: read

    outputs:
      image_name: ${{ steps.docker-image-name.outputs.image_name }}
    
    steps:
    # Checks-out the repository
    - name: Checks-out Repository
      id: checks-out-repository
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.checkout_ref }}

    - name: Authenticate to Google Cloud
      id: oidc-to-gcp
      uses: google-github-actions/auth@v2.1.10
      with:
        token_format: 'access_token'
        create_credentials_file: true
        workload_identity_provider: projects/${{ vars.GCP_PROJECT_NUMBER}}/locations/global/workloadIdentityPools/${{ vars.GCP_WORKLOAD_IDENTITY_POOL }}/providers/${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{vars.GCP_SERVICE_ACCOUNT}}

    - name: Set up gcloud Cloud SDK environment
      id: 'set-up-cloud'
      uses: google-github-actions/setup-gcloud@v2.1.4

    - name: "Get GCP Docker Repo Name"
      id: get_gcp_docker_repo
      run: |
        repo_name=${repo_name:-"${{ vars.GCP_DOCKER_REPO_NAME}}"}
        echo $repo_name
        echo 'gcp_docker_repo_full_name="${{vars.GCP_DOCKER_REGISTRY}}/${{vars.GCP_GAR_PROJECT_ID}}/"'$repo_name >> $GITHUB_OUTPUT
        echo 'gcp_docker_repo_name='$repo_name >> $GITHUB_OUTPUT
      shell: bash

    - name: Set Docker Image Name
      id: docker-image-name
      run: |
        commitid=$(echo ${{ toJSON(github.sha) }} | cut -c1-6)
        date=$(date '+%Y-%m-%d-%H-%M')
        image_name="${{ steps.get_gcp_docker_repo.outputs.gcp_docker_repo_full_name }}${{ vars.SERVICE_NAME }}:${{ github.ref_name }}-$commitid-$date"

        echo "Generated Image Name: $image_name"
        echo "image_name=$image_name" >> $GITHUB_OUTPUT
      shell: bash

    - name: Authenticate to Docker
      id: docker-auth
      uses: 'docker/login-action@v1'
      with:
        username: 'oauth2accesstoken'
        password: '${{ steps.oidc-to-gcp.outputs.access_token }}'
        registry: '${{vars.GCP_DOCKER_REGISTRY}}'

    - name: Set up Java
      uses: actions/setup-java@v4.7.1
      with:
        distribution: 'temurin'
        java-version: ${{ vars.JAVA_VERSION }}
      
    - name: Cache Maven repo
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
      
    - name: Build with Maven
      run: mvn clean package -DskipTests


    - name: Build And Push Docker Image
      id: build-and-push-docker-image
      run: |
        docker build --no-cache -t ${{ steps.docker-image-name.outputs.image_name }} .
        docker push ${{ steps.docker-image-name.outputs.image_name }}
      shell: bash

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
    
    steps:

      - name: Authenticate to Google Cloud
        id: oidc-to-gcp
        uses: google-github-actions/auth@v2.1.10
        with:
          token_format: 'access_token'
          create_credentials_file: true
          workload_identity_provider: projects/${{ vars.GCP_PROJECT_NUMBER}}/locations/global/workloadIdentityPools/${{ vars.GCP_WORKLOAD_IDENTITY_POOL }}/providers/${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{vars.GCP_SERVICE_ACCOUNT}}

      - name: Deploy to Cloud Run
        id: deploy-to-cloud-run
        uses: google-github-actions/deploy-cloudrun@v2.7.3
        with:
          service: ${{ vars.SERVICE }}
          region: ${{ vars.REGION }}
          image: ${{ needs.build.outputs.image_name }}
      
      - name: 'Use output'
        run: 'curl "${{ steps.deploy-to-cloud-run.outputs.url }}"'
        shell: bash

    
